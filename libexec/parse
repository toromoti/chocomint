#!/usr/bin/env bash
# vim: ft=sh

declare -A _BASHTF_HASH
declare -a _BASHTF_TEST_COMMENT_STYLE # "NL" or "EOL"
declare -i LINE_NUMBER=1
declare -i TEST_NUMBER=0
declare TEST_MARKER=":"
declare PARSE_METHOD="parse_nl" # initial parse-method

parse_test_dq_bs() {
  case $1 in
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      PARSE_METHOD="parse_test_dq"
      ;;
  esac
}

parse_test_dq() {
  case $1 in
    '"' )
      PARSE_METHOD="parse_test_right"
      ;;
    "\\" )
      TEST_COMMENT="$TEST_COMMENT""\\"
      PARSE_METHOD="parse_test_dq_bs"
      ;;
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      ;;
  esac
}

parse_test_sq() {
  case $1 in
    "'" )
      TEST_COMMENT="$TEST_COMMENT""'"
      PARSE_METHOD="parse_test_right"
      ;;
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      ;;
  esac
}

parse_test_bs() {
  case $1 in
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      PARSE_METHOD="parse_test_right"
      ;;
  esac
}

parse_test_right() {
  case $1 in
    '"' )
      PARSE_METHOD="parse_test_dq"
      ;;
    "'" )
      TEST_COMMENT="$TEST_COMMENT""'"
      PARSE_METHOD="parse_test_sq"
      ;;
    "\\" )
      TEST_COMMENT="$TEST_COMMENT""\\"
      PARSE_METHOD="parse_test_bs"
      ;;
    "" )
      _BASHTF_TEST_COMMENT_STYLE[LINE_NUMBER]="$COMMENT_IN"
      _BASHTF_HASH[$LINE_NUMBER,$TEST_NUMBER,right]="$TEST_COMMENT"
      _BASHTF_HASH[$LINE_NUMBER,max]="$TEST_NUMBER"
      PARSE_METHOD="parse_nl"
      LINE_NUMBER+=1
      TEST_COMMENT=""
      TEST_NUMBER=0
      ;;
    " "|"\t" )
      _BASHTF_TEST_COMMENT_STYLE[LINE_NUMBER]="$COMMENT_IN"
      _BASHTF_HASH[$LINE_NUMBER,$TEST_NUMBER,right]="$TEST_COMMENT"
      PARSE_METHOD="parse_test_blank"
      TEST_COMMENT=""
      ((TEST_NUMBER++))
      ;;
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      ;;
  esac
}

parse_test_mid() {
  case $1 in
    "="|":" )
      TEST_COMMENT="$TEST_COMMENT""$1"
      ;;
    "!" )
      TEST_COMMENT="!"
      ;;
    * )
      _BASHTF_HASH[$LINE_NUMBER,$TEST_NUMBER,mid]="$TEST_COMMENT"
      TEST_COMMENT=""
      PARSE_METHOD="parse_test_right"
      parse_test_right "$1"
      ;;
  esac
}

parse_test_left() {
  case $1 in
    "!"|"="|":" )
      _BASHTF_HASH[$LINE_NUMBER,$TEST_NUMBER,left]="$TEST_COMMENT"
      TEST_COMMENT=""
      PARSE_METHOD="parse_test_mid"
      parse_test_mid "$1"
      ;;
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      ;;
  esac
}

parse_test_blank() {
  case $1 in
    " "|"\t" )
      ;;
    * )
      PARSE_METHOD="parse_test_left"
      parse_test_left "$1"
      ;;
  esac
}

parse_hash() {
  case $1 in
    "$TEST_MARKER" )
      PARSE_METHOD="parse_test_blank"
      ;;
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_nl"
      ;;
    * )
      PARSE_METHOD="parse_main"
      ;;
  esac
}

parse_dq_bs() {
  case $1 in
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_dq"
      ;;
    * )
      PARSE_METHOD="parse_dq"
      ;;
  esac
}

parse_dq() {
  case $1 in
    "\\" )
      PARSE_METHOD="parse_dq_bs"
      ;;
    '"' )
      PARSE_METHOD="parse_main"
      ;;
    "" )
      LINE_NUMBER+=1
      ;;
    * )
      :
      ;;
  esac
}

parse_sq() {
  case $1 in
    "'" )
      PARSE_METHOD="parse_main"
      ;;
    "" )
      LINE_NUMBER+=1
      ;;
    * )
      :
      ;;
  esac
}

parse_bs() {
  case $1 in
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_main"
      ;;
    * )
      PARSE_METHOD="parse_main"
      ;;
  esac
}

parse_main() {
  case $1 in
    "#" )
      PARSE_METHOD="parse_hash"
      COMMENT_IN="EOL"
      ;;
    "\\" )
      PARSE_METHOD="parse_bs"
      ;;
    "'" )
      PARSE_METHOD="parse_sq"
      ;;
    '"' )
      PARSE_METHOD="parse_dq"
      ;;
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_nl"
      ;;
    * )
      ;;
  esac
}

parse_nl_space() {
  case $1 in
    "#" )
      PARSE_METHOD="parse_hash"
      COMMENT_IN="NL"
      ;;
    " "|"\t" )
      PARSE_METHOD="parse_nl_space"
      ;;
    "\\" )
      PARSE_METHOD="parse_bs"
      ;;
    "'" )
      PARSE_METHOD="parse_sq"
      ;;
    '"' )
      PARSE_METHOD="parse_dq"
      ;;
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_nl"
      ;;
    * )
      PARSE_METHOD="parse_main"
      ;;
  esac
}

parse_nl() {
  case $1 in
    "#" )
      PARSE_METHOD="parse_hash"
      COMMENT_IN="NL"
      ;;
    " "|"\t" )
      PARSE_METHOD="parse_nl_space"
      ;;
    "\\" )
      PARSE_METHOD="parse_bs"
      ;;
    "'" )
      PARSE_METHOD="parse_sq"
      ;;
    '"' )
      PARSE_METHOD="parse_dq"
      ;;
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_nl"
      ;;
    * )
      PARSE_METHOD="parse_main"
      ;;
  esac
}

expose_variable() {
  declare -p _BASHTF_TEST_COMMENT_STYLE
  declare -p _BASHTF_HASH
}

main() {
  local file=$1 line char

  while IFS= read -r line; do
    while IFS= read -r -n 1 char; do
      $PARSE_METHOD "$char"
    done < <(echo $line)
  done < $file

  expose_variable
}

main "$@"
