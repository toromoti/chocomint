#!/usr/bin/env bash
# vim: ft=sh

declare -A CHOCOMINT_DB
declare -a CHOCOMINT_TEST_POSITION # "NL" or "EOL"
declare -i LINE_NUMBER=1
declare -i TEST_INDEX=-1
declare TEST_MARKER=":"
declare PARSE_METHOD="parse_nl" # initial parse-method

parse_test_dq_bs() {
  case $1 in
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      PARSE_METHOD="parse_test_dq"
      ;;
  esac
}

parse_test_dq() {
  case $1 in
    '"' )
      TEST_COMMENT="$TEST_COMMENT""\""
      PARSE_METHOD="parse_test_right"
      ;;
    "\\" )
      TEST_COMMENT="$TEST_COMMENT""\\"
      PARSE_METHOD="parse_test_dq_bs"
      ;;
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      ;;
  esac
}

parse_test_sq() {
  case $1 in
    "'" )
      TEST_COMMENT="$TEST_COMMENT""'"
      PARSE_METHOD="parse_test_right"
      ;;
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      ;;
  esac
}

parse_test_bs() {
  case $1 in
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      PARSE_METHOD="parse_test_right"
      ;;
  esac
}

parse_test_right() {
  case $1 in
    '"' )
      TEST_COMMENT="$TEST_COMMENT""\""
      PARSE_METHOD="parse_test_dq"
      ;;
    "'" )
      TEST_COMMENT="$TEST_COMMENT""'"
      PARSE_METHOD="parse_test_sq"
      ;;
    "\\" )
      TEST_COMMENT="$TEST_COMMENT""\\"
      PARSE_METHOD="parse_test_bs"
      ;;
    "" )
      CHOCOMINT_TEST_POSITION[LINE_NUMBER]="$COMMENT_IN"
      CHOCOMINT_DB[$LINE_NUMBER,$TEST_INDEX,right]="$TEST_COMMENT"
      CHOCOMINT_DB[$LINE_NUMBER,max]="$TEST_INDEX"
      PARSE_METHOD="parse_nl"
      LINE_NUMBER+=1
      TEST_COMMENT=""
      TEST_INDEX=-1
      ;;
    " "|"\t" )
      CHOCOMINT_DB[$LINE_NUMBER,$TEST_INDEX,right]="$TEST_COMMENT"
      PARSE_METHOD="parse_test_main"
      TEST_COMMENT=""
      ;;
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      ;;
  esac
}

parse_test_mid() {
  case $1 in
    "="|":" )
      TEST_COMMENT="$TEST_COMMENT""$1"
      ;;
    "!" )
      TEST_COMMENT="!"
      ;;
    * )
      CHOCOMINT_DB[$LINE_NUMBER,$TEST_INDEX,mid]="$TEST_COMMENT"
      TEST_COMMENT=""
      PARSE_METHOD="parse_test_right"
      parse_test_right "$1"
      ;;
  esac
}

parse_test_left() {
  case $1 in
    "!"|"="|":" )
      CHOCOMINT_DB[$LINE_NUMBER,$TEST_INDEX,left]="$TEST_COMMENT"
      TEST_COMMENT=""
      PARSE_METHOD="parse_test_mid"
      parse_test_mid "$1"
      ;;
    * )
      TEST_COMMENT="$TEST_COMMENT""$1"
      ;;
  esac
}

parse_test_main() {
  case $1 in
    " "|"\t" )
      ;;
    "" )
      CHOCOMINT_TEST_POSITION[LINE_NUMBER]="$COMMENT_IN"
      CHOCOMINT_DB[$LINE_NUMBER,max]="$TEST_INDEX"
      PARSE_METHOD="parse_nl"
      LINE_NUMBER+=1
      TEST_COMMENT=""
      TEST_INDEX=-1
      ;;
    * )
      ((TEST_INDEX++))
      PARSE_METHOD="parse_test_left"
      parse_test_left "$1"
      ;;
  esac
}

parse_hash() {
  case $1 in
    "$TEST_MARKER" )
      PARSE_METHOD="parse_test_main"
      ;;
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_nl"
      ;;
    * )
      PARSE_METHOD="parse_main"
      ;;
  esac
}

parse_dq_bs() {
  case $1 in
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_dq"
      ;;
    * )
      PARSE_METHOD="parse_dq"
      ;;
  esac
}

parse_dq() {
  case $1 in
    "\\" )
      PARSE_METHOD="parse_dq_bs"
      ;;
    '"' )
      PARSE_METHOD="parse_main"
      ;;
    "" )
      LINE_NUMBER+=1
      ;;
    * )
      :
      ;;
  esac
}

parse_sq() {
  case $1 in
    "'" )
      PARSE_METHOD="parse_main"
      ;;
    "" )
      LINE_NUMBER+=1
      ;;
    * )
      :
      ;;
  esac
}

parse_bs() {
  case $1 in
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_main"
      ;;
    * )
      PARSE_METHOD="parse_main"
      ;;
  esac
}

parse_main() {
  case $1 in
    "#" )
      PARSE_METHOD="parse_hash"
      COMMENT_IN="EOL"
      ;;
    "\\" )
      PARSE_METHOD="parse_bs"
      ;;
    "'" )
      PARSE_METHOD="parse_sq"
      ;;
    '"' )
      PARSE_METHOD="parse_dq"
      ;;
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_nl"
      ;;
    * )
      ;;
  esac
}

parse_nl_space() {
  case $1 in
    "#" )
      PARSE_METHOD="parse_hash"
      COMMENT_IN="NL"
      ;;
    " "|"\t" )
      PARSE_METHOD="parse_nl_space"
      ;;
    "\\" )
      PARSE_METHOD="parse_bs"
      ;;
    "'" )
      PARSE_METHOD="parse_sq"
      ;;
    '"' )
      PARSE_METHOD="parse_dq"
      ;;
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_nl"
      ;;
    * )
      PARSE_METHOD="parse_main"
      ;;
  esac
}

parse_nl() {
  case $1 in
    "#" )
      PARSE_METHOD="parse_hash"
      COMMENT_IN="NL"
      ;;
    " "|"\t" )
      PARSE_METHOD="parse_nl_space"
      ;;
    "\\" )
      PARSE_METHOD="parse_bs"
      ;;
    "'" )
      PARSE_METHOD="parse_sq"
      ;;
    '"' )
      PARSE_METHOD="parse_dq"
      ;;
    "" )
      LINE_NUMBER+=1
      PARSE_METHOD="parse_nl"
      ;;
    * )
      PARSE_METHOD="parse_main"
      ;;
  esac
}

expose_variable() {
  declare -p CHOCOMINT_DB > /dev/null 2>&1 || exit 1
  declare -p CHOCOMINT_TEST_POSITION
  declare -p CHOCOMINT_DB
}

main() {
  local file=$1 line char

  while IFS= read -r line; do
    while IFS= read -r -n 1 char; do
      $PARSE_METHOD "$char"
    done < <(echo "$line")
  done < $file

  expose_variable
}

main "$@"
