#!/usr/bin/env bash
# vim: ft=sh

_chm_match_file() {
  # $1 right string
  local _chm_matching=false
  local _chm_opt="$1"
  local _chm_string="$2"
  shift 2

  linenum="$(echo "$_chm_string" | wc -l)"

  for _chm_file in "$@"
  do
    if [ "$linenum" -eq 0 ]; then
      grep "$_chm_opt" -q "$_chm_string" "$_chm_file" && _chm_matching=true
    else
      _chm_fail=false
      while read _chm_line
      do
        grep "$_chm_opt" --binary-files=text "$_chm_line" "$_chm_file" >&3 || _chm_fail=true
      done <<< "$_chm_string"
      $_chm_fail || _chm_matching=true
    fi
  done

  $_chm_matching && return 0 || return 1
}

_chm_judge() {
  # $1 left string
  # $2 middle string
  # $3 right string
  # $4 exit status
  case $1 in
    'output' )
      case $2 in
        '::' )
          case $3 in
            'None' )
              ([ ! -s "$_CHM_CMD_OUT_FILE" ] && [ ! -s "$_CHM_CMD_ERR_FILE" ]) && return 0 || return 1
              ;;
          esac
          ;;
      esac
      ;;
    'stdout' )
      case $2 in
        '::' )
          case $3 in
            'None' )
              [ ! -s "$_CHM_CMD_OUT_FILE" ] && return 0 || return 1
              ;;
          esac
          ;;
      esac
      ;;
    'stderr' )
      case $2 in
        '::' )
          case $3 in
            'None' )
              [ ! -s "$_CHM_CMD_ERR_FILE" ] && return 0 || return 1
              ;;
          esac
          ;;
      esac
      ;;
  esac

  case $2 in
    "=" )
      [ "$1" = "$3" ] && return 0 || return 1
      ;;
    "!=" )
      [ "$1" != "$3" ] && return 0 || return 1
      ;;
    '=~' )
      (echo "$1" | grep -E -q "$3") && return 0 || return 1
      ;;
    '!=~' )
      (echo "$1" | grep -E -q "$3") && return 1 || return 0
      ;;
    ':'|':~' )
      case $1 in
        'status' )
          if [ "$4" -eq "$3" ]; then
            return 0
          else
            return 1
          fi
          ;;
        'output' )
          [ "$2" = ':~' ] && local _chm_opt='-E' || local _chm_opt='-F'
          if _chm_match_file $_chm_opt "$3" "$_CHM_CMD_OUT_FILE" "$_CHM_CMD_ERR_FILE"
          then
            return 0
          else
            return 1
          fi
          ;;
        'stdout' )
          [ "$2" = ':~' ] && local _chm_opt='-E' || local _chm_opt='-F'
          if _chm_match_file $_chm_opt "$3" "$_CHM_CMD_OUT_FILE"; then
            return 0
          else
            return 1
          fi
          ;;
        'stderr' )
          [ "$2" = ':~' ] && local _chm_opt='-E' || local _chm_opt='-F'
          if _chm_match_file $_chm_opt "$3" "$_CHM_CMD_ERR_FILE"; then
            return 0
          else
            return 1
          fi
          ;;
      esac
      ;;
    '!:'|'!:~' )
      case $1 in
        'status' )
          if [ "$4" -ne "$3" ]; then
            return 0
          else
            return 1
          fi
          ;;
        'output' )
          [ "$2" = '!:~' ] && local _chm_opt='-E' || local _chm_opt='-F'
          if _chm_match_file $_chm_opt "$3" "$_CHM_CMD_OUT_FILE" "$_CHM_CMD_ERR_FILE"; then
            return 1
          else
            return 0
          fi
          ;;
        'stdout' )
          [ "$2" = '!:~' ] && local _chm_opt='-E' || local _chm_opt='-F'
          if _chm_match_file $_chm_opt "$3" "$_CHM_CMD_OUT_FILE"; then
            return 1
          else
            return 0
          fi
          ;;
        'stderr' )
          [ "$2" = '!:~' ] && local _chm_opt='-E' || local _chm_opt='-F'
          if _chm_match_file $_chm_opt "$3" "$_CHM_CMD_ERR_FILE"; then
            return 1
          else
            return 0
          fi
          ;;
      esac
      ;;
  esac
}

_chm_judge "$@"
